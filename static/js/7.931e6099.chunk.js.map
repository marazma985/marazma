{"version":3,"sources":["Conponents/redux-form/Input.module.css","Conponents/redux-form/Input.jsx","Validate/Validator.js","Conponents/Login/Login.module.css","Conponents/Login/Login.jsx"],"names":["module","exports","Input","input","meta","className","props","hasError","touched","error","s","form","required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","onSubmit","handleSubmit","component","type","validate","name","placeholder","captchaUrl","src","connect","state","auth","captcha","login","myId","id","loginTC","main","to","center","dataForm","email","password","rememberMe","register","scrolling","frameborder"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,uB,oHCatCC,IAXD,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,UAAcC,EAAY,iBAC9CC,EAAWH,EAAKI,SAAWJ,EAAKK,MACtC,OACQ,sBAAKJ,UAAWK,IAAEC,KAAlB,UACI,+CAAON,UAAWE,EAAWG,IAAED,MAAO,IAAKJ,EAAYA,GAAgBF,GAAWG,IACjFC,GAAY,qBAAKF,UAAU,YAAf,SAA2B,+BAAOD,EAAKK,e,iCCRpE,oEAAO,IAAMG,EAAW,SAACC,GACrB,IAAGA,EACH,MAAO,kBAEEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,KAAGA,EAAMG,OAASD,GAClB,MAAM,OAAN,OAAcA,EAAd,e,oBCLJf,EAAOC,QAAU,CAAC,KAAO,oBAAoB,SAAW,wBAAwB,MAAQ,qBAAqB,OAAS,wB,iCCDtH,oGAiEMgB,EAAiBC,YAAU,CAAEP,KAAM,SAAlBO,EAjCL,SAACZ,GACf,OACI,uBAAMa,SAAUb,EAAMc,aAAtB,UACI,8BACKd,EAAMG,QAEX,8BACI,cAAC,IAAD,CAAOY,UAAWnB,IAAOoB,KAAK,OAAOC,SAAU,CAACX,KAAWY,KAAK,QAAQC,YAAY,YAExF,8BACI,cAAC,IAAD,CAAOJ,UAAWnB,IAAOoB,KAAK,OAAOC,SAAU,CAACX,KAAWY,KAAK,WAAWC,YAAY,eAE3F,gCACI,cAAC,IAAD,CAAOJ,UAAU,QAAQG,KAAK,aAAaF,KAAK,aADpD,gBAGA,8BACKhB,EAAMoB,YAAc,gCACjB,qBAAKC,IAAKrB,EAAMoB,aAChB,8BACI,cAAC,IAAD,CAAOL,UAAWnB,IAAOqB,SAAU,CAACX,KAAWY,KAAK,UAAUC,YAAY,yBAMtF,8BACI,mDAkBDG,uBARS,SAACC,GACrB,MAAM,CACNH,WAAWG,EAAMC,KAAKC,QACtBC,MAAMH,EAAMC,KAAKE,MACjBC,KAAKJ,EAAMC,KAAKI,MAImB,CAACC,aAAzBP,EAnED,SAACtB,GAMX,OACI,sBAAKD,UAAW,QAAUK,IAAE0B,KAA5B,UACK9B,EAAM0B,OAAS,cAAC,IAAD,CAAUK,GAAI,YAAc/B,EAAM2B,OAClD,qBAAK5B,UAAWK,IAAEsB,MAAlB,SACI,sBAAK3B,UAAWK,IAAE4B,OAAlB,UACI,uCACA,cAACrB,EAAD,CAAgBE,SAXf,SAACoB,GACdjC,EAAM6B,QAAQI,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAWH,EAASR,UAU9BL,WAAYpB,EAAMoB,kBAI9D,qBAAKrB,UAAWK,IAAEiC,SAAlB,SACI,wBAAQhB,IAAI,sDAAsDiB,UAAU,KAAKC,YAAY","file":"static/js/7.931e6099.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Input_form__2l1_0\",\"error\":\"Input_error__ovyr1\"};","import React from 'react';\r\nimport s from './Input.module.css'\r\n\r\nconst Input = ({ input, meta, className, ...props }) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n            <div className={s.form} >\r\n                <input className={hasError ? s.error +' '+ className : className } {...input} {...props} />\r\n                {hasError && <div className='spanErorr'><span>{meta.error}</span></div>}\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Input","export const required = (value) =>{\r\n    if(value) return undefined;\r\n    return 'need send text'\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) =>{\r\n    if(value.length < maxLength) return undefined;\r\n    return `Max ${maxLength} simbols`\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__2W2bK\",\"register\":\"Login_register__3_vdJ\",\"login\":\"Login_login__1RJ1t\",\"center\":\"Login_center__16uhe\"};","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { loginTC } from '../../Redux/auth-Reduser';\r\nimport { required } from '../../Validate/Validator';\r\nimport Input from '../redux-form/Input';\r\nimport s from './Login.module.css';\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (dataForm) => {\r\n        props.loginTC(dataForm.email, dataForm.password, dataForm.rememberMe,dataForm.captcha)\r\n        \r\n\r\n    }\r\n    return (\r\n        <div className={\"flex \" + s.main}>\r\n            {props.login && <Redirect to={'/Profile/' + props.myId}></Redirect>}\r\n            <div className={s.login} >\r\n                <div className={s.center}>\r\n                    <h1>LogIn</h1>\r\n                    <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n                </div>\r\n\r\n            </div>\r\n            <div className={s.register} >\r\n                <iframe src=\"https://social-network.samuraijs.com/signUp#content\" scrolling='no' frameborder=\"0\"></iframe>\r\n            </div>\r\n        </div>\r\n            \r\n    )\r\n}\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                {props.error }\r\n            </div>\r\n            <div>\r\n                <Field component={Input} type=\"text\" validate={[required]} name='email' placeholder='login' />\r\n            </div>\r\n            <div>\r\n                <Field component={Input} type=\"text\" validate={[required]} name='password' placeholder='password' />\r\n            </div>\r\n            <div>\r\n                <Field component='input' name='rememberMe' type='checkbox' />rememberMe\r\n            </div>\r\n            <div>\r\n                {props.captchaUrl && <div>\r\n                    <img src={props.captchaUrl} />\r\n                    <div>\r\n                        <Field component={Input} validate={[required]} name='captcha' placeholder='write simbols' />\r\n                    </div>\r\n                    \r\n                </div>}\r\n\r\n            </div>\r\n            <div>\r\n                <button>LogIn</button>\r\n            </div>\r\n        </form>\r\n\r\n\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n    captchaUrl:state.auth.captcha,\r\n    login:state.auth.login,\r\n    myId:state.auth.id\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{loginTC})(Login)"],"sourceRoot":""}